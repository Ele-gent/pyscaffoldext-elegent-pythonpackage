name: tests

on:
  push:
    # Avoid using all the resources/limits available by checking only
    # relevant branches and tags. Other branches can be checked via PRs.
    branches:
      - 'main'
      - 'releases/**'
    tags: ['v[0-9]*', '[0-9]+.[0-9]+*']  # Match tags that resemble a version
  pull_request:
    types: [opened, reopened, ready_for_review, review_requested]
  # issue_comment: # triggered by specific wording in the comment, see the line right below jobs: prepare DOES NOT WORK
  #   types: [created]
  pull_request_review:
    types: [submitted, edited, dismissed]
  pull_request_review_comment:
    types: [created, edited, deleted]
  workflow_dispatch:  # Allow manually triggering the workflow via the GitHub CLI e.g.: `gh workflow run ci.yml -r BRANCHNAME` or via the web interface in the tab `Actions`
  schedule:
    # Run roughly every 15 days at 00:00 UTC
    # (useful to check if updates on dependencies break the package)
    - cron: '0 0 1,16 * *'

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  prepare:
    # if: >-
    #   github.event_name != 'issue_comment' ||
    #   (
    #     github.event_name == 'issue_comment' &&
    #     contains(github.event.comment.body, 'run ci') &&
    #     github.event.issue.pull_request
    #   )
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}  # deep clone for setuptools-scm
      - uses: actions/setup-python@v4
        id: setup-python
        with: {python-version: "3.11"}
      - name: Run static analysis and format checkers
        run: pipx run pre-commit run --all-files --show-diff-on-failure
      - name: Build package distribution files
        run: >-
          pipx run --python '${{ steps.setup-python.outputs.python-path }}'
          tox -e clean,build
      - name: Record the path of wheel distribution
        id: wheel-distribution
        run: echo "path=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
      - name: Store the distribution files for use in other stages
        # `tests` and `publish` will use the same pre-built distributions,
        # so we make sure to release the exact same package that was tested
        uses: actions/upload-artifact@v3
        with:
          name: python-distribution-files
          path: dist/
          retention-days: 1

  test:
    needs: prepare
    strategy:
      matrix:
        python:
        # - "3.7"  # oldest Python supported by PSF
        # - "3.8"  # minimum requirement for DVC
        - "3.10"
        - "3.11"
        - "3.12"  # newest Python that is stable
        platform:
        - ubuntu-latest
        # - macos-latest
        # - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python }}
      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          global: true
          name: 'Derp McDerpface'
          email: 'derp@mcderp.face'
          actor: 'DerpMcDerpface'
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v4
        with: {name: python-distribution-files, path: dist/}
      - name: Run tests
        run: >-
          pipx run --python '${{ steps.setup-python.outputs.python-path }}'
          tox --installpkg '${{ needs.prepare.outputs.wheel-distribution }}'
          -- -rFEx --durations 10 --color yes  # pytest args
